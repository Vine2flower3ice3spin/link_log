`configure' configures Aegisub aegisub_version to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/aegisub]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

X features:
  --x-includes=DIR    X include files are in DIR
  --x-libraries=DIR   X library files are in DIR

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-compiler-flags
                          Disable *all* additional compiler flags. [no]
  --disable-sanity-checks Skip verifying that found libraries work.
  --enable-debug          enable debugging [no]
  --enable-debug-exceptions
                          enable exception handling in debug mode [no]
  --enable-debug          Build in debug mode (default is auto)
  --disable-gcc-prec      disable GCC precompiled headers
  --disable-nls           do not use Native Language Support
  --disable-rpath         do not hardcode runtime library paths
  --disable-update-checker
                          disable the update checker [no]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-desktop-dir=PATH desktop file locations [PREFIX/share/applications]
  --with-icon-dir=PATH    icon locations [PREFIX/share/icons]
  --with-build-credit=NAME
                          Build credit shown in the program title.
  --with-libc++           Use libc++ rather than libstdc++. [auto]
  --with-x                use the X Window System
  --with-boost=PATH       use Boost library from the specified location
  --with-boost-libdir=LIB_DIR
                          Force given directory for boost libraries. Note that
                          this will override library path detection, so use
                          this parameter only if default library detection
                          fails and you know exactly where your boost
                          libraries are located.
  --with-boost-chrono=LIBNAME
                          Override the name of the library for boost.chrono
                          e.g. --with-boost-chrono=boost_chrono-gcc-mt
  --with-boost-filesystem=LIBNAME
                          Override the name of the library for
                          boost.filesystem e.g.
                          --with-boost-filesystem=boost_filesystem-gcc-mt
  --with-boost-locale=LIBNAME
                          Override the name of the library for boost.locale
                          e.g. --with-boost-locale=boost_locale-gcc-mt
  --with-boost-regex=LIBNAME
                          Override the name of the library for boost.regex
                          e.g. --with-boost-regex=boost_regex-gcc-mt
  --with-boost-system=LIBNAME
                          Override the name of the library for boost.system
                          e.g. --with-boost-system=boost_system-gcc-mt
  --with-boost-thread=LIBNAME
                          Override the name of the library for boost.thread
                          e.g. --with-boost-thread=boost_thread-gcc-mt
  --without-alsa          build without ALSA audio player [auto]
  --without-openal        build without OpenAL audio player [auto]
  --without-oss           build without OSS audio player [auto]
  --without-libpulse      build without PulseAudio audio player [auto]
  --without-portaudio     build without PortAudio v19 audio player [auto]
  --without-ffms2         build without ffms2 A/V provider [auto]
  --without-fftw3         build without fftw support [auto]
  --without-hunspell      build without hunspell spell-checking [auto]
  --with-wxdir=PATH       Use uninstalled version of wxWidgets in PATH
  --with-wx-config=CONFIG wx-config script to use (optional)
  --with-wx-prefix=PREFIX Prefix where wxWidgets is installed (optional)
  --with-wx-exec-prefix=PREFIX
                          Exec prefix where wxWidgets is installed (optional)
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir
  --with-update-server=HOSTNAME
                          Server to use for the update checker
                          [updates.aegisub.org]
  --with-update-url=HOSTNAME
                          Base path to use for the update checker [/trunk]
  --with-player-audio=(ALSA|OpenAL|PortAudio|PulseAudio|OSS)
                          Default Audio Player [Linux/ALSA, Darwin/OpenAL,
                          1:*/OSS, 2:*/PortAudio]

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  CXXCPP      C++ preprocessor
  XMKMF       Path to xmkmf, Makefile generator for X Window System
  FREETYPE_CFLAGS
              C compiler flags for FREETYPE, overriding pkg-config
  FREETYPE_LIBS
              linker flags for FREETYPE, overriding pkg-config
  FONTCONFIG_CFLAGS
              C compiler flags for FONTCONFIG, overriding pkg-config
  FONTCONFIG_LIBS
              linker flags for FONTCONFIG, overriding pkg-config
  LIBASS_CFLAGS
              C compiler flags for LIBASS, overriding pkg-config
  LIBASS_LIBS linker flags for LIBASS, overriding pkg-config
  ICU_UC_CFLAGS
              C compiler flags for ICU_UC, overriding pkg-config
  ICU_UC_LIBS linker flags for ICU_UC, overriding pkg-config
  ICU_I18N_CFLAGS
              C compiler flags for ICU_I18N, overriding pkg-config
  ICU_I18N_LIBS
              linker flags for ICU_I18N, overriding pkg-config
  ICONV_CFLAGS
              CFLAGS to use for iconv []
  ICONV_LIBS  LIBS to use for iconv [-liconv]
  ALSA_CFLAGS CFLAGS to use for ALSA []
  ALSA_LIBS   LIBS to use for ALSA [-lasound -lrt]
  OPENAL_CFLAGS
              C compiler flags for OPENAL, overriding pkg-config
  OPENAL_LIBS linker flags for OPENAL, overriding pkg-config
  OSS_CFLAGS  CFLAGS to use for OSS [auto]
  LIBPULSE_CFLAGS
              C compiler flags for LIBPULSE, overriding pkg-config
  LIBPULSE_LIBS
              linker flags for LIBPULSE, overriding pkg-config
  PORTAUDIO_CFLAGS
              C compiler flags for PORTAUDIO, overriding pkg-config
  PORTAUDIO_LIBS
              linker flags for PORTAUDIO, overriding pkg-config
  FFMS2_CFLAGS
              C compiler flags for FFMS2, overriding pkg-config
  FFMS2_LIBS  linker flags for FFMS2, overriding pkg-config
  FFTW3_CFLAGS
              C compiler flags for FFTW3, overriding pkg-config
  FFTW3_LIBS  linker flags for FFTW3, overriding pkg-config
  HUNSPELL_CFLAGS
              C compiler flags for HUNSPELL, overriding pkg-config
  HUNSPELL_LIBS
              linker flags for HUNSPELL, overriding pkg-config

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
